name: CI/CD Pipeline with Minikube (none driver)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup-minikube:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y conntrack socat ebtables iptables curl

      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Start Minikube with none driver
        run: |
          sudo minikube start --driver=none --cpus=2 --memory=4096mb
          sudo minikube update-context
          kubectl cluster-info

  build-and-deploy:
    needs: setup-minikube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image inside Minikube
        run: |
          eval $(minikube docker-env)
          docker build -t devops-demo .

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/

      - name: Wait for deployment to be ready
        run: |
          kubectl rollout status deployment/devops-demo-deployment

      - name: Test service response
        run: |
          NODE_PORT=$(kubectl get service/devops-demo-service -o=jsonpath='{.spec.ports[0].nodePort}')
          MINIKUBE_IP=$(minikube ip)
          sleep 10
          curl --retry 10 --retry-delay 5 "http://$MINIKUBE_IP:$NODE_PORT" | grep "Hello, DevOps World!"

      - name: Clean up Minikube
        if: always()
        run: |
          sudo minikube delete